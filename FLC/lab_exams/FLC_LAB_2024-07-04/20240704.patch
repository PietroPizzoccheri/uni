diff -Naur acse_2.0.2/acse/parser.y acse_2.0.2_patched/acse/parser.y
--- acse_2.0.2/acse/parser.y	2024-12-11 22:10:40
+++ acse_2.0.2_patched/acse/parser.y	2024-12-11 22:10:52
@@ -70,6 +70,7 @@
 %token TYPE
 %token RETURN
 %token READ WRITE ELSE
+%token TRI
 
 // These are the tokens with a semantic value.
 %token <ifStmt> IF
@@ -434,6 +435,23 @@
     genSNE(program, rNormalizedOp2, $3, REG_0);
     $$ = getNewRegister(program);
     genOR(program, $$, rNormalizedOp1, rNormalizedOp2);
+  }
+  | TRI LPAR exp RPAR
+  {
+    // Reserve a register for the result, and generate an instruction to
+    // initialize it to zero.
+    $$ = getNewRegister(program);
+    genLI(program, $$, 0);
+    // Generate a branch that skips the computation if the expression is
+    // negative or zero
+    t_label *lNegative = createLabel(program);
+    genBLE(program, $3, REG_0, lNegative);
+    // Generate the computation of the triangular number
+    genADDI(program, $$, $3, 1);  // $$ = n + 1
+    genMUL(program, $$, $$, $3);  // $$ = n * (n + 1)
+    genDIVI(program, $$, $$, 2);  // $$ = n * (n + 1) / 2
+    // Assign the label to the end of the code
+    assignLabel(program, lNegative);
   }
 ;
 
diff -Naur acse_2.0.2/acse/scanner.l acse_2.0.2_patched/acse/scanner.l
--- acse_2.0.2/acse/scanner.l	2024-12-11 22:10:40
+++ acse_2.0.2_patched/acse/scanner.l	2024-12-11 22:10:40
@@ -81,6 +81,7 @@
 "return"                  { return RETURN; }
 "read"                    { return READ; }
 "write"                   { return WRITE; }
+"tri"                     { return TRI; }
 
 {ID}                      {
                             yylval.string = strdup(yytext);
diff -Naur acse_2.0.2/tests/tri/tri.src acse_2.0.2_patched/tests/tri/tri.src
--- acse_2.0.2/tests/tri/tri.src	1970-01-01 01:00:00
+++ acse_2.0.2_patched/tests/tri/tri.src	2024-12-11 22:10:40
@@ -0,0 +1,7 @@
+int i;
+
+i = 0;
+while (i < 15) {
+  write(tri(i - 5));
+  i = i + 1;
+}

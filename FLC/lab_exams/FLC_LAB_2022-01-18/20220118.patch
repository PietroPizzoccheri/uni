diff --git a/acse/parser.h b/acse/parser.h
--- a/acse/parser.h
+++ b/acse/parser.h
@@ -26,6 +26,11 @@ typedef struct {
   t_label *lExit; ///< Label to the first instruction after the loop.
 } t_whileStmt;
 
+typedef struct {
+  t_regID rLastValue; ///< Register containing the previous value of the var.
+  t_label *lLoop;     ///< Label to the beginning of the loop.
+} t_convergeStmt;
+
 /**
  * @}
  */
diff --git a/acse/parser.y b/acse/parser.y
--- a/acse/parser.y
+++ b/acse/parser.y
@@ -50,6 +50,7 @@ void yyerror(const char *msg)
   t_label *label;
   t_ifStmt ifStmt;
   t_whileStmt whileStmt;
+  t_convergeStmt convergeStmt;
 }
 
 /*
@@ -77,6 +78,7 @@ void yyerror(const char *msg)
 %token <label> DO
 %token <string> IDENTIFIER
 %token <integer> NUMBER
+%token <convergeStmt> CONVERGE
 
 /*
  * Non-terminal symbol semantic value type declarations
@@ -182,6 +184,7 @@ statement
   | return_statement SEMI
   | read_statement SEMI
   | write_statement SEMI
+  | converge_statement
   | SEMI
 ;
 
@@ -306,6 +309,29 @@ write_statement
   }
 ;
 
+converge_statement
+  : CONVERGE var_id
+  {
+    // Reserve a register that will buffer the old value of the variable
+    $1.rLastValue = getNewRegister(program);
+    // Generate a label that points to the body of the loop
+    $1.lLoop = createLabel(program);
+    assignLabel(program, $1.lLoop);
+
+    // Generate code that, just before each execution of the loop body,
+    // saves the value of the variable in the register we reserved earlier
+    t_regID rVar = genLoadVariable(program, $2);
+    genADD(program, $1.rLastValue, REG_0, rVar);
+  } 
+  code_block
+  {
+    // Generate a branch that continues the loop if the variable's current
+    // value is different than its previous one.
+    t_regID rVar = genLoadVariable(program, $2);
+    genBNE(program, rVar, $1.rLastValue, $1.lLoop);
+  }
+;
+
 /* The exp rule represents the syntax of expressions. The semantic value of
  * the rule is the register ID that will contain the value of the expression
  * at runtime.
diff --git a/acse/scanner.l b/acse/scanner.l
--- a/acse/scanner.l
+++ b/acse/scanner.l
@@ -81,6 +81,7 @@ ID                        [a-zA-Z_][a-zA-Z0-9_]*
 "return"                  { return RETURN; }
 "read"                    { return READ; }
 "write"                   { return WRITE; }
+"converge"                { return CONVERGE; }
 
 {ID}                      {
                             yylval.string = strdup(yytext);
diff --git a/tests/converge/converge.src b/tests/converge/converge.src
--- /dev/null
+++ b/tests/converge/converge.src
@@ -0,0 +1,11 @@
+int a, b;
+a = 31;
+
+converge a {
+  a = a / 3;
+  write(a);
+}
+
+converge a {
+  write(a);
+}
